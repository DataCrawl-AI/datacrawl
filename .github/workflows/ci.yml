name: CI
on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Install dependencies
        run: |
          poetry install --with dev
      - name: Run black
        run: |
          poetry run black --check .
      - name: Run ruff
        run: |
          poetry run ruff check .

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    env:
      COVERAGE_FILE: ".coverage.${{ matrix.python-version }}"

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Install dependencies
        run: |
          poetry install --with dev
      - name: Run tests
        run: |
          poetry run pytest --cov=./
      - name: Store coverage file
        uses: actions/upload-artifact@v4
        with:
          name: .coverage.${{ matrix.python-version }}
          path: .coverage.${{ matrix.python-version }}

  coverage-comment:
    name: Create coverage comment
    needs: test
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        name: Retrieve coverage files
        id: download
        with:
          pattern: .coverage.*
          merge-multiple: true

      - uses: py-cov-action/python-coverage-comment-action@v3.24
        name: Generate coverage comment
        id: coverage_comment
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_COVERAGE_FILES: true
          MINIMUM_GREEN: 80
          MINIMUM_ORANGE: 70

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment: publish-pip
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Install dependencies
        run: |
          poetry install --with dev
      - name: Build package
        run: poetry build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
